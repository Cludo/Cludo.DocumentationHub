{
  "swagger": "2.0",
  "info": {
    "version": "v3",
    "title": "Cludo API"
  },
  "host": "search.local",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v3/{customerId}/{engineId}/AutoComplete": {
      "get": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "AutoComplete searches GET",
        "description": "AutoComplete searches is a more minimalistic way of searching; Ideal for dropdown lists, helping the user input the correct search words.\"",
        "operationId": "AutoCompleteGetGET",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "responseType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotSpecified",
              "JsonObject",
              "JsonHtml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "Result": {
                  "Results": [
                    {
                      "ResultIndex": 1,
                      "Sortings": null,
                      "Score": 0.0,
                      "Fields": {
                        "Title": {
                          "Field": "Title",
                          "Value": "Amazing title about tollroads",
                          "Values": [
                            "Amazing title about tollroads"
                          ],
                          "Highlights": [
                            "Amazing title about <b>tollroads</b>"
                          ],
                          "IsArray": false
                        },
                        "Description": {
                          "Field": "Description",
                          "Value": "A long description",
                          "Values": [
                            "A long description"
                          ],
                          "Highlights": [
                            "A long description"
                          ],
                          "IsArray": false
                        },
                        "NewsArea": {
                          "Field": "NewsArea",
                          "Value": "Sports",
                          "Values": [
                            "Sports"
                          ],
                          "Highlights": [
                            "Sports"
                          ],
                          "IsArray": false
                        }
                      },
                      "FieldNames": [
                        "Title",
                        "Description",
                        "NewsArea"
                      ]
                    }
                  ],
                  "Suggestions": [
                    {
                      "ResultIndex": 1,
                      "Sortings": null,
                      "Score": 0.0,
                      "Fields": {
                        "Title": {
                          "Field": "Title",
                          "Value": "Amazing title about tollroads",
                          "Values": [
                            "Amazing title about tollroads"
                          ],
                          "Highlights": [
                            "Amazing title about <b>tollroads</b>"
                          ],
                          "IsArray": false
                        },
                        "Description": {
                          "Field": "Description",
                          "Value": "A long description",
                          "Values": [
                            "A long description"
                          ],
                          "Highlights": [
                            "A long description"
                          ],
                          "IsArray": false
                        },
                        "NewsArea": {
                          "Field": "NewsArea",
                          "Value": "Sports",
                          "Values": [
                            "Sports"
                          ],
                          "Highlights": [
                            "Sports"
                          ],
                          "IsArray": false
                        }
                      },
                      "FieldNames": [
                        "Title",
                        "Description",
                        "NewsArea"
                      ]
                    }
                  ],
                  "TopHits": [],
                  "TotalResults": 8,
                  "TotalSuggestions": 2,
                  "ResponseTime": 40,
                  "QueryId": "c77f19d9a4b243b182466ca31cf9848c",
                  "Facets": {
                    "Category": {
                      "FieldName": "Category",
                      "MissingCount": 0,
                      "AllCount": 35,
                      "Items": [
                        {
                          "Key": "News",
                          "Count": 30,
                          "Facets": {
                            "newsArea": {
                              "FieldName": "newsArea",
                              "MissingCount": 0,
                              "AllCount": 30,
                              "Items": [
                                {
                                  "Key": "sports",
                                  "Count": 10,
                                  "Facets": {}
                                }
                              ]
                            }
                          }
                        },
                        {
                          "Key": "Events",
                          "Count": 5,
                          "Facets": {}
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "AutoComplete"
        ],
        "summary": "AutoComplete searches",
        "description": "AutoComplete searches is a more minimalistic way of searching; Ideal for dropdown lists, helping the user input the correct search words.\"",
        "operationId": "AutoCompletePostPOST",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cludo.App.Dto.AutocompleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "Result": {
                  "Results": [
                    {
                      "ResultIndex": 1,
                      "Sortings": null,
                      "Score": 0.0,
                      "Fields": {
                        "Title": {
                          "Field": "Title",
                          "Value": "Amazing title about tollroads",
                          "Values": [
                            "Amazing title about tollroads"
                          ],
                          "Highlights": [
                            "Amazing title about <b>tollroads</b>"
                          ],
                          "IsArray": false
                        },
                        "Description": {
                          "Field": "Description",
                          "Value": "A long description",
                          "Values": [
                            "A long description"
                          ],
                          "Highlights": [
                            "A long description"
                          ],
                          "IsArray": false
                        },
                        "NewsArea": {
                          "Field": "NewsArea",
                          "Value": "Sports",
                          "Values": [
                            "Sports"
                          ],
                          "Highlights": [
                            "Sports"
                          ],
                          "IsArray": false
                        }
                      },
                      "FieldNames": [
                        "Title",
                        "Description",
                        "NewsArea"
                      ]
                    }
                  ],
                  "Suggestions": [
                    {
                      "ResultIndex": 1,
                      "Sortings": null,
                      "Score": 0.0,
                      "Fields": {
                        "Title": {
                          "Field": "Title",
                          "Value": "Amazing title about tollroads",
                          "Values": [
                            "Amazing title about tollroads"
                          ],
                          "Highlights": [
                            "Amazing title about <b>tollroads</b>"
                          ],
                          "IsArray": false
                        },
                        "Description": {
                          "Field": "Description",
                          "Value": "A long description",
                          "Values": [
                            "A long description"
                          ],
                          "Highlights": [
                            "A long description"
                          ],
                          "IsArray": false
                        },
                        "NewsArea": {
                          "Field": "NewsArea",
                          "Value": "Sports",
                          "Values": [
                            "Sports"
                          ],
                          "Highlights": [
                            "Sports"
                          ],
                          "IsArray": false
                        }
                      },
                      "FieldNames": [
                        "Title",
                        "Description",
                        "NewsArea"
                      ]
                    }
                  ],
                  "TopHits": [],
                  "TotalResults": 8,
                  "TotalSuggestions": 2,
                  "ResponseTime": 40,
                  "QueryId": "c77f19d9a4b243b182466ca31cf9848c",
                  "Facets": {
                    "Category": {
                      "FieldName": "Category",
                      "MissingCount": 0,
                      "AllCount": 35,
                      "Items": [
                        {
                          "Key": "News",
                          "Count": 30,
                          "Facets": {
                            "newsArea": {
                              "FieldName": "newsArea",
                              "MissingCount": 0,
                              "AllCount": 30,
                              "Items": [
                                {
                                  "Key": "sports",
                                  "Count": 10,
                                  "Facets": {}
                                }
                              ]
                            }
                          }
                        },
                        {
                          "Key": "Events",
                          "Count": 5,
                          "Facets": {}
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v3/{customerId}/content/{crawlerId}/pushurls": {
      "post": {
        "tags": [
          "pushurls"
        ],
        "summary": "URL pushing",
        "description": "Since full domain crawls are only made rarely (maybe once a day), then new pages to your website won't appear\r\nin search results before the domain is recrawled. If you cannot wait for a complete recrawl, then you may push the\r\nurls in question, which will be crawled within a couple of minutes.\"",
        "operationId": "ContentUrlToUpdate",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "crawlerId",
            "in": "path",
            "description": "Crawler Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "urls",
            "in": "body",
            "description": "Urls to push",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "https://www.cludo.com/en/products/",
                "https://www.cludo.com/en/features/"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cludo.Common.View.PushUrlsResponse"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v3/{customerId}/content/{crawlerId}/push": {
      "post": {
        "tags": [
          "push"
        ],
        "summary": "Data pushing",
        "description": "If you don't have any crawlers setup, or know exactly how your data is stored, you may directly push search results\r\ninto your data storage with this endpoint.",
        "operationId": "ContentBatchPush",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "crawlerId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "example": [
                {
                  "Title": "My title",
                  "Description": "Description",
                  "Type": "PageContent",
                  "CustomField1": 222,
                  "CustomField2": "News"
                },
                {
                  "Title": "My title",
                  "Description": "Description",
                  "Type": "PageContent",
                  "CustomField1": 123,
                  "CustomField2": "News"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v3/{customerId}/content/{crawlerId}/delete": {
      "post": {
        "tags": [
          "deleteData"
        ],
        "summary": "Delete data",
        "description": "If a page or file is removed from your website, you don't want for it to appear in your search results anymore, as\r\nit will lead to dead links. It will be removed upon a recrawl regardless, but if it can't wait, you can use this\r\nendpoint to manually delete it.",
        "operationId": "ContentBatchDelete",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "crawlerId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resources",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "example": [
                {
                  "https://www.cludo.com/some-page/": "PageContent"
                },
                {
                  "some-string": "PageContent"
                },
                {
                  "https://www.cludo.com/some-file.pdf": "FileContent"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/engine/{engineId}/quicklinks": {
      "get": {
        "tags": [
          "Quicklinks"
        ],
        "summary": "Get all quicklinks for a specific engine",
        "description": "Get all quicklinks for a specific engine.",
        "operationId": "QuicklinksGetBySiteId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cludo.Common.View.QuicklinkView"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/engine/{engineId}/quicklinkterms": {
      "get": {
        "tags": [
          "Quicklinks"
        ],
        "summary": "Get quicklinks by engine and term",
        "description": "Get quicklinks by engine and term.",
        "operationId": "QuicklinksGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "searchword",
            "in": "query",
            "description": "The specific term",
            "required": true,
            "type": "string"
          },
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cludo.Common.View.QuicklinkView"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Quicklinks/{id}": {
      "get": {
        "tags": [
          "Quicklinks"
        ],
        "summary": "Get quicklink",
        "description": "Get quicklink.",
        "operationId": "QuicklinksGetGET",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the specific quicklink",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.QuicklinkView"
            },
            "examples": {
              "application/json": {
                "id": 5807805,
                "url": "https://www.cludo.com/contact/",
                "terms": [
                  {
                    "name": "contact"
                  }
                ],
                "websiteid": 7578030,
                "brokenLinksFoundAt": null
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Quicklinks"
        ],
        "summary": "Update quicklink",
        "description": "Update quicklink.",
        "operationId": "QuicklinksPutPUT",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the specific quicklink",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.QuicklinkView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.QuicklinkView"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Quicklinks"
        ],
        "summary": "Delete quicklink",
        "description": "Delete quicklink.",
        "operationId": "QuicklinksDeleteDELETE",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the specific quicklink",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Quicklinks": {
      "post": {
        "tags": [
          "Quicklinks"
        ],
        "summary": "Create quicklink",
        "description": "Create quicklink.",
        "operationId": "QuicklinksPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.QuicklinkView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.QuicklinkView"
            },
            "examples": {
              "application/json": {
                "id": 5807805,
                "url": "https://www.cludo.com/contact/",
                "terms": [
                  {
                    "name": "contact"
                  }
                ],
                "websiteid": 7578030,
                "brokenLinksFoundAt": null
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/rankings/site/{engineId}": {
      "get": {
        "tags": [
          "Rankings"
        ],
        "summary": "Get all page rankings by engine",
        "description": "Get all page rankings for a specific engine.",
        "operationId": "RankingsGetBySiteId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cludo.Common.View.RankingView"
              }
            },
            "examples": {
              "application/json": [
                {
                  "name": "Hello, World!",
                  "pages": [
                    {
                      "id": 0,
                      "showpage": true,
                      "rank": 1,
                      "websiteid": 7578030,
                      "page": {
                        "name": null,
                        "pageurl": "https://www.cludo.com/contact/",
                        "pageid": "https://www.cludo.com/contact",
                        "searchable": true,
                        "websiteid": 7578030,
                        "website": "http://cludo.com/7578030/",
                        "id": 0,
                        "url": "http://cludo.com/0/"
                      },
                      "RankingId": 0
                    }
                  ],
                  "rankingterms": [
                    {
                      "name": "hello",
                      "rankingId": 0,
                      "id": 0
                    }
                  ],
                  "WebsiteId": 7578030,
                  "id": 0,
                  "brokenLinksFoundAt": null
                }
              ]
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Rankings": {
      "get": {
        "tags": [
          "Rankings"
        ],
        "summary": "Get all page rankings",
        "description": "Get all page rankings for the entire account.",
        "operationId": "RankingsGetGET",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cludo.Common.View.RankingView"
              }
            },
            "examples": {
              "application/json": [
                {
                  "name": "Hello, World!",
                  "pages": [
                    {
                      "id": 0,
                      "showpage": true,
                      "rank": 1,
                      "websiteid": 7578030,
                      "page": {
                        "name": null,
                        "pageurl": "https://www.cludo.com/contact/",
                        "pageid": "https://www.cludo.com/contact",
                        "searchable": true,
                        "websiteid": 7578030,
                        "website": "http://cludo.com/7578030/",
                        "id": 0,
                        "url": "http://cludo.com/0/"
                      },
                      "RankingId": 0
                    }
                  ],
                  "rankingterms": [
                    {
                      "name": "hello",
                      "rankingId": 0,
                      "id": 0
                    }
                  ],
                  "WebsiteId": 7578030,
                  "id": 0,
                  "brokenLinksFoundAt": null
                }
              ]
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "Rankings"
        ],
        "summary": "Create page ranking",
        "description": "Create page ranking.\"",
        "operationId": "RankingsPostPOST",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.RankingView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.RankingView"
            },
            "examples": {
              "application/json": {
                "name": "Hello, World!",
                "pages": [
                  {
                    "id": 0,
                    "showpage": true,
                    "rank": 1,
                    "websiteid": 7578030,
                    "page": {
                      "name": null,
                      "pageurl": "https://www.cludo.com/contact/",
                      "pageid": "https://www.cludo.com/contact",
                      "searchable": true,
                      "websiteid": 7578030,
                      "website": "http://cludo.com/7578030/",
                      "id": 0,
                      "url": "http://cludo.com/0/"
                    },
                    "RankingId": 0
                  }
                ],
                "rankingterms": [
                  {
                    "name": "hello",
                    "rankingId": 0,
                    "id": 0
                  }
                ],
                "WebsiteId": 7578030,
                "id": 0,
                "brokenLinksFoundAt": null
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/Rankings/{id}": {
      "get": {
        "tags": [
          "Rankings"
        ],
        "summary": "Get single page ranking",
        "description": "Get a specific page ranking.",
        "operationId": "RankingsGetGET",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Page Ranking ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.RankingView"
            },
            "examples": {
              "application/json": {
                "name": "Hello, World!",
                "pages": [
                  {
                    "id": 0,
                    "showpage": true,
                    "rank": 1,
                    "websiteid": 7578030,
                    "page": {
                      "name": null,
                      "pageurl": "https://www.cludo.com/contact/",
                      "pageid": "https://www.cludo.com/contact",
                      "searchable": true,
                      "websiteid": 7578030,
                      "website": "http://cludo.com/7578030/",
                      "id": 0,
                      "url": "http://cludo.com/0/"
                    },
                    "RankingId": 0
                  }
                ],
                "rankingterms": [
                  {
                    "name": "hello",
                    "rankingId": 0,
                    "id": 0
                  }
                ],
                "WebsiteId": 7578030,
                "id": 0,
                "brokenLinksFoundAt": null
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": [
          "Rankings"
        ],
        "summary": "Update a specific page ranking.",
        "description": "Update a specific page ranking\"",
        "operationId": "RankingsPutPUT",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the specific page ranking",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entity",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.RankingView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Cludo.Common.View.RankingView"
            },
            "examples": {
              "application/json": {
                "name": "Hello, World!",
                "pages": [
                  {
                    "id": 0,
                    "showpage": true,
                    "rank": 1,
                    "websiteid": 7578030,
                    "page": {
                      "name": null,
                      "pageurl": "https://www.cludo.com/contact/",
                      "pageid": "https://www.cludo.com/contact",
                      "searchable": true,
                      "websiteid": 7578030,
                      "website": "http://cludo.com/7578030/",
                      "id": 0,
                      "url": "http://cludo.com/0/"
                    },
                    "RankingId": 0
                  }
                ],
                "rankingterms": [
                  {
                    "name": "hello",
                    "rankingId": 0,
                    "id": 0
                  }
                ],
                "WebsiteId": 7578030,
                "id": 0,
                "brokenLinksFoundAt": null
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Rankings"
        ],
        "summary": "Delete a specific page ranking.",
        "description": "Delete a specific page ranking",
        "operationId": "RankingsDeleteDELETE",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the specific page ranking",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "A successfully delete will return a 204 No Content code"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v3/{customerId}/{engineId}/search/pushstat/{type}": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Tracking",
        "description": "Tracking is the concept of actually recording what your visitors are searching for and what they're interested in. Without it, Cludo would simply serve as a search solution and wouldn't be able to provide you with statistics and other crucial data features\"",
        "operationId": "SearchPushStatPOST",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "sz": "4096x2160",
                "ua": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36",
                "refurl": "https://www.cludo.com/site-search-features/",
                "refpt": "Customizable, whitebox AI driven site search built for marketers - Cludo",
                "sw": "government",
                "brl": "en-US",
                "pn": "1",
                "hn": "www.cludo.com",
                "rc": "7",
                "fquery": "",
                "ban": "2",
                "bnrs": "2673284,3933858",
                "rt": "34",
                "ql": "",
                "qid": "be74e31601814d8fb90750e5a7082916",
                "sid": "",
                "qsid": "1696ba3d02e74658a3673b509435b082",
                "ls": "searchresult",
                "clurl": "https://www.cludo.com/government/",
                "cli": "1",
                "cloi": "",
                "title": "Government",
                "it": "",
                "ip": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v3/{customerId}/{engineId}/Search/AllDocuments": {
      "post": {
        "tags": [
          "Search"
        ],
        "summary": "Get indexed documents",
        "description": "Get indexed documents for an engine by either title or URL similarity.",
        "operationId": "SearchAllDocuments",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "excludeDocumentIds",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "The search term",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "How you want it to match on the filter. Either any, title, or url",
            "required": true,
            "type": "string",
            "enum": [
              "Any",
              "Url",
              "Title"
            ]
          },
          {
            "name": "functionType",
            "in": "query",
            "description": "In this context, this must be pageranking",
            "required": true,
            "type": "string",
            "enum": [
              "Pageranking",
              "Excludedpage"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Used for pagination. If omitted, it will default to 1",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "perpage",
            "in": "query",
            "description": "Used for pagination. If omitted, it will default to 25",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cludo.App.Dto.IndexDocument"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v3/{customerId}/{engineId}/Search": {
      "post": {
        "tags": [
          "FullSearch"
        ],
        "summary": "Retrieves search results filtered and ranked by importance",
        "description": "Full searches is the standard way to search with Cludo. With these requests you have a great variety of functions available to express your search.\"",
        "operationId": "SearchPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "requestParams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cludo.App.Dto.SearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "Result": {
                  "TypedDocuments": [
                    {
                      "ResultIndex": 1,
                      "Sortings": null,
                      "Score": 0.0,
                      "Fields": {
                        "Title": {
                          "Field": "Title",
                          "Value": "Amazing title about tollroads",
                          "Values": [
                            "Amazing title about tollroads"
                          ],
                          "Highlights": [
                            "Amazing title about <b>tollroads</b>"
                          ],
                          "IsArray": false
                        },
                        "Description": {
                          "Field": "Description",
                          "Value": "A long description",
                          "Values": [
                            "A long description"
                          ],
                          "Highlights": [
                            "A long description"
                          ],
                          "IsArray": false
                        },
                        "NewsArea": {
                          "Field": "NewsArea",
                          "Value": "Sports",
                          "Values": [
                            "Sports"
                          ],
                          "Highlights": [
                            "Sports"
                          ],
                          "IsArray": false
                        }
                      },
                      "FieldNames": [
                        "Title",
                        "Description",
                        "NewsArea"
                      ]
                    }
                  ],
                  "TopHits": [],
                  "TotalDocument": 80,
                  "Suggestions": [
                    {
                      "Text": "roadpricing"
                    }
                  ],
                  "Facets": {
                    "Category": {
                      "FieldName": "Category",
                      "MissingCount": 0,
                      "AllCount": 35,
                      "Items": [
                        {
                          "Key": "News",
                          "Count": 30,
                          "Facets": {
                            "newsArea": {
                              "FieldName": "newsArea",
                              "MissingCount": 0,
                              "AllCount": 30,
                              "Items": [
                                {
                                  "Key": "sports",
                                  "Count": 10,
                                  "Facets": {}
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "Banners": null,
                  "RangeFacets": null,
                  "RelatedSearchDocuments": null,
                  "FixedQuery": "tollroad",
                  "ResponseTime": 40,
                  "Synonyms": null,
                  "QueryId": "c77f19d9a4b243b182466ca31cf9848c"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v3/{customerId}/{engineId}/Statistics/SearchHistogram": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Search counts summed by day for a specified period.",
        "description": "Retrieves a list of search counts summed by day for a specified period.\"",
        "operationId": "StatisticsSearchHistogramGET",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "query",
            "description": "What statistics do you want. Options are: all,unsuccessfull, successful",
            "required": true,
            "type": "string",
            "enum": [
              "All",
              "Successful",
              "Unsuccessful"
            ]
          },
          {
            "name": "from",
            "in": "query",
            "description": "Datetime when you want statistics from eg. 2016-08-14T22:00:00.000Z",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "description": "Datetime when you want the statistics to eg. 2016-08-18T22:00:00.000Z",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "TotalSearches": [
                  {
                    "Key": "2016-08-14",
                    "Value": 200
                  },
                  {
                    "Key": "2016-08-15",
                    "Value": 900
                  },
                  {
                    "Key": "2016-08-16",
                    "Value": 0
                  }
                ],
                "UniqueSearches": [
                  {
                    "Key": "2016-08-14",
                    "Value": 100
                  },
                  {
                    "Key": "2016-08-15",
                    "Value": 450
                  },
                  {
                    "Key": "2016-08-16",
                    "Value": 0
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v3/{customerId}/{engineId}/Statistics/TotalSearches": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Search counts for a specified period.",
        "description": "Retrieves the search count, for a specified period\"",
        "operationId": "StatisticsTotalSearchesGET",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "onlyIncludeUnique",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includePreviousPeriod",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "withinCurrentPeriod": 25000
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/v3/{customerId}/{engineId}/Statistics/ClickCounts": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Clicks Statistics",
        "description": "Retrieves a list of clicked targets for a specified period, ordered by popularity by default.\"",
        "operationId": "StatisticsClickCountsGET",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "engineId",
            "in": "path",
            "description": "Engine Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Datetime when you want statistics from eg. 2016-08-14T22:00:00.000Z",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "description": "Datetime when you want the statistics to eg. 2016-08-18T22:00:00.000Z",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "query",
            "in": "query",
            "description": "A search word to filter results by to only get results for a single search term",
            "required": false,
            "type": "string"
          },
          {
            "name": "clickTarget",
            "in": "query",
            "description": "Click type to get results for, currently only supports 'page' which means ordinary search results",
            "required": false,
            "type": "string",
            "enum": [
              "Page",
              "Banner"
            ]
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Property to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort direction (ascending, descending)",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results pr. page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, zero indexed",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "pageNumber": 0,
                "pageSize": 10,
                "totalItems": 1,
                "items": [
                  {
                    "previousCount": 10,
                    "previousUniqueCount": 5,
                    "clickTarget": "http://cludo.com/all-about-clicktracking.pdf",
                    "title": "Cludo click tracking statistics",
                    "count": 22,
                    "uniqueCount": 11,
                    "target": 0
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/synonymsgroup": {
      "put": {
        "tags": [
          "SynonymsGroup"
        ],
        "summary": "Update synonyms group",
        "description": "Update a specific synonyms group..\"",
        "operationId": "SynonymsGroupUpdatePUT",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "synonymsDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cludo.App.Dto.SynonymsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "words": [
                  "work",
                  "job",
                  "opportunity"
                ],
                "language": "en",
                "groupId": 1
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "tags": [
          "SynonymsGroup"
        ],
        "summary": "Create synonyms group",
        "description": "Create a synonyms group.\"",
        "operationId": "SynonymsGroupCreatePOST",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "synonymsDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cludo.App.Dto.SynonymsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "words": [
                  "work",
                  "job",
                  "opportunity"
                ],
                "language": "en",
                "groupId": 1
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "SynonymsGroup"
        ],
        "summary": "Delete synonym",
        "description": "Delete one or more synonyms groups.\"",
        "operationId": "SynonymsGroupDeleteDELETE",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "groupIds",
            "in": "query",
            "description": "The IDs of the specific synonyms group",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/synonymsgroup/{language}": {
      "get": {
        "tags": [
          "SynonymsGroup"
        ],
        "summary": "Get all synonyms by language",
        "description": "Get all synonyms groups for a specific language.\"",
        "operationId": "SynonymsGroupRead",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "description": "A two-letter ISO language code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "words": [
                    "work",
                    "job",
                    "opportunity"
                  ],
                  "language": "en",
                  "groupId": 1
                }
              ]
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    },
    "/api/synonymsgroup/{groupId}": {
      "get": {
        "tags": [
          "SynonymsGroup"
        ],
        "summary": "Get single synonyms group",
        "description": "Get a specific synonyms group.\"",
        "operationId": "SynonymsGroupRead",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The ID of the specific synonyms group",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "words": [
                  "work",
                  "job",
                  "opportunity"
                ],
                "language": "en",
                "groupId": 1
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Cludo.App.Dto.AdvancedFilter": {
      "type": "object",
      "properties": {}
    },
    "Cludo.App.Dto.SearchRequest": {
      "type": "object",
      "properties": {
        "Query": {
          "type": "string"
        },
        "Operator": {
          "enum": [
            "Or",
            "And"
          ],
          "type": "string"
        },
        "ResponseType": {
          "enum": [
            "NotSpecified",
            "JsonObject",
            "JsonHtml"
          ],
          "type": "string"
        },
        "Overlay": {
          "type": "string"
        },
        "Sort": {
          "type": "object",
          "additionalProperties": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          }
        },
        "ValueBoost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.App.Dto.FacetBoost"
          }
        },
        "PostFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "PostFiltersOperator": {
          "enum": [
            "Or",
            "And"
          ],
          "type": "string"
        },
        "AdvancedPostFilter": {
          "$ref": "#/definitions/Cludo.App.Dto.AdvancedFilter"
        },
        "Filters": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "NotFilters": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "EnableRelatedSearches": {
          "type": "boolean"
        },
        "AutoRankingFactor": {
          "format": "double",
          "type": "number"
        },
        "JsonFilter": {
          "type": "string"
        }
      },
      "example": {
        "Query": "The search string here",
        "Operator": "Or",
        "ResponseType": "JsonObject",
        "Overlay": "Overlay Template V2",
        "Sort": {
          "City": "asc"
        },
        "ValueBoost": [
          {
            "Boosts": [
              {
                "Values": [
                  "A",
                  "B",
                  "C"
                ],
                "Boost": 23.4
              }
            ],
            "FieldName": "Category"
          }
        ],
        "PostFilters": {
          "Category": [
            "Publications",
            "Events"
          ]
        },
        "PostFiltersOperator": "Or",
        "Filters": {
          "range": [
            "Price",
            "20",
            "100"
          ]
        },
        "NotFilters": {
          "date": [
            "EventDate",
            "20170601",
            "20170630"
          ]
        },
        "EnableRelatedSearches": true
      }
    },
    "Cludo.App.Dto.FacetBoost": {
      "type": "object",
      "properties": {
        "Boosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.App.Dto.BoostValuePair"
          }
        },
        "FieldName": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Dto.TopHitsRequestField": {
      "type": "object",
      "properties": {
        "Field": {
          "type": "string"
        },
        "Size": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.App.Dto.RangeFacetFilter": {
      "type": "object",
      "properties": {
        "FieldName": {
          "type": "string"
        },
        "Ranges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.App.Dto.RangeFilter"
          }
        }
      }
    },
    "Cludo.App.Dto.BoostValuePair": {
      "type": "object",
      "properties": {
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Boost": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Cludo.App.Dto.RangeFilter": {
      "type": "object",
      "properties": {
        "From": {
          "type": "string"
        },
        "To": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.UserViewModelWithCustomer": {
      "required": [
        "email",
        "language"
      ],
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/Cludo.Common.View.CustomerViewModel"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.UserClaimViewModel"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.UserRoleViewModel"
          }
        }
      }
    },
    "Cludo.Common.View.CustomerViewModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isTrial": {
          "type": "boolean"
        },
        "isDemo": {
          "type": "boolean"
        },
        "isDemoOrTrial": {
          "type": "boolean"
        },
        "daysLeft": {
          "format": "int32",
          "type": "integer"
        },
        "customerSubscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.CustomerSubscriptionViewModel"
          }
        },
        "websites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.WebsiteViewModel"
          }
        },
        "url": {
          "type": "string",
          "readOnly": true
        },
        "note": {
          "type": "string"
        },
        "idleTimeoutInMins": {
          "format": "int32",
          "type": "integer"
        },
        "logInternalSearches": {
          "type": "boolean"
        }
      }
    },
    "Cludo.Common.View.UserClaimViewModel": {
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.UserRoleViewModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.CustomerSubscriptionViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "currentPeriodStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "currentPeriodEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "assignedCsm": {
          "type": "string"
        },
        "customerType": {
          "type": "string"
        },
        "implementationType": {
          "type": "string"
        },
        "isContractCancelled": {
          "type": "boolean"
        },
        "subscriptionProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.SubscriptionProductViewModel"
          }
        }
      }
    },
    "Cludo.Common.View.WebsiteViewModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "enableGoogleAnalyticsIntegration": {
          "type": "boolean"
        },
        "enableSiteimproveAnalyticsIntegration": {
          "type": "boolean"
        },
        "optOutCookieTracking": {
          "type": "boolean"
        },
        "enableAnonymousTracking": {
          "type": "boolean"
        },
        "Engines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "enableSmartAutocomplete": {
          "type": "boolean"
        }
      }
    },
    "Cludo.Common.View.SubscriptionProductViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "quota": {
          "format": "int32",
          "type": "integer"
        },
        "productTemplate": {
          "$ref": "#/definitions/Cludo.Common.View.ProductTemplateViewModel"
        }
      }
    },
    "Cludo.Common.View.ProductTemplateViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "productItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.ProductItemViewModel"
          }
        }
      }
    },
    "Cludo.Common.View.ProductItemViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "quota": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.App.Dto.AutocompleteRequest": {
      "type": "object",
      "properties": {
        "Query": {
          "type": "string"
        },
        "ResponseType": {
          "enum": [
            "NotSpecified",
            "JsonObject",
            "JsonHtml"
          ],
          "type": "string"
        }
      },
      "example": {
        "Query": "The string query to search for",
        "ResponseType": "JsonObject"
      }
    },
    "Cludo.Common.View.BannerTermViewModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "bannerId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.BannerView": {
      "required": [
        "name",
        "htmlcode",
        "websiteid"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "htmlcode": {
          "type": "string"
        },
        "bannerterms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.BannerTermViewModel"
          }
        },
        "isDisabled": {
          "type": "boolean"
        },
        "websiteid": {
          "format": "int32",
          "type": "integer"
        },
        "brokenLinksFoundAt": {
          "format": "date-time",
          "type": "string"
        },
        "from": {
          "format": "date-time",
          "type": "string"
        },
        "to": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.ChangeLogViewModel": {
      "required": [
        "changedDate",
        "header",
        "description",
        "languageKey"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "changedDate": {
          "format": "date-time",
          "type": "string"
        },
        "header": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "languageKey": {
          "type": "string"
        },
        "isRead": {
          "type": "boolean"
        }
      }
    },
    "Cludo.Common.View.PushUrlsResponse": {
      "type": "object",
      "properties": {
        "Url": {
          "type": "string"
        },
        "Status": {
          "enum": [
            "Ok",
            "Invalid"
          ],
          "type": "string"
        }
      }
    },
    "Cludo.App.Dto.DeleteByCriteriaRequest": {
      "type": "object",
      "properties": {
        "Filters": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "BeforeDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.ViewModels.CountryViewModel": {
      "type": "object",
      "properties": {
        "englishName": {
          "type": "string"
        },
        "twoLetterCountryCode": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Dto.CrawlerActivityLogsCallParameters": {
      "type": "object",
      "properties": {
        "DomainName": {
          "type": "string"
        },
        "PageCrawlStatus": {
          "enum": [
            "crawled",
            "indexed",
            "missingTitle",
            "missingDescription",
            "missingContent",
            "error"
          ],
          "type": "string"
        },
        "Query": {
          "type": "string"
        },
        "OrderBy": {
          "type": "string"
        },
        "SortOrder": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "Limit": {
          "format": "int32",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.CrawlerView": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ignorePatterns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.CrawlerIgnorePatternView"
          }
        },
        "regExpIgnorePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.CrawlerFieldSettingsViewModel"
          }
        },
        "crawlUrls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.CrawlerWebsiteViewModel"
          }
        },
        "whitelistUrls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.CrawlerWhiteListUrlViewModel"
          }
        },
        "type": {
          "enum": [
            "content",
            "member"
          ],
          "type": "string"
        },
        "indexingStrategy": {
          "enum": [
            "mostRecent",
            "historical"
          ],
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "fileSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.CrawlerFieldSettingsViewModel"
          }
        },
        "crawlJobId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "isDisabled": {
          "type": "boolean"
        },
        "lastFullCrawl": {
          "format": "date-time",
          "type": "string"
        },
        "lastSmartCrawl": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "customerId": {
          "format": "int32",
          "type": "integer"
        },
        "extension": {
          "type": "string"
        },
        "extensionSettings": {
          "type": "string"
        },
        "sitemaps": {
          "type": "string"
        },
        "respectNoIndex": {
          "type": "boolean"
        },
        "respectCanonical": {
          "type": "boolean"
        },
        "importSitemaps": {
          "type": "boolean"
        },
        "threadCount": {
          "format": "int32",
          "type": "integer"
        },
        "ignoreFiles": {
          "type": "boolean"
        },
        "isSslCertificateValidationEnabled": {
          "type": "boolean"
        },
        "shouldStartCrawl": {
          "type": "boolean"
        },
        "preferredStartTime": {
          "type": "string"
        },
        "lastFullCrawlStart": {
          "format": "date-time",
          "type": "string"
        },
        "index": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.CrawlerIgnorePatternView": {
      "type": "object",
      "properties": {
        "regExp": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.CrawlerFieldSettingsViewModel": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "fieldType": {
          "enum": [
            "title",
            "description",
            "category",
            "url",
            "image",
            "custom",
            "metadescription"
          ],
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueRegExp": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.CrawlerFieldregExpSettingsObjectViewModel"
          }
        },
        "defaultValue": {
          "type": "string"
        },
        "valueType": {
          "enum": [
            "heading",
            "title",
            "ogTitle",
            "cludoTitle",
            "xPath",
            "body",
            "cludoCategory",
            "metaKeyword",
            "regExp",
            "ignore",
            "ogImage",
            "cludoImage",
            "ogGraph",
            "cludoTag",
            "metaTag",
            "media",
            "httpheader",
            "autodetect",
            "metaDescription",
            "structuredData"
          ],
          "type": "string"
        },
        "isRequired": {
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "format": {
          "type": "string"
        },
        "dataType": {
          "enum": [
            "string",
            "datetime",
            "number",
            "html",
            "array"
          ],
          "type": "string"
        },
        "Precedence": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.CrawlerWebsiteViewModel": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.CrawlerWhiteListUrlViewModel": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.CrawlerFieldregExpSettingsObjectViewModel": {
      "type": "object",
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "regExpValue": {
          "type": "string"
        }
      }
    },
    "Cludo.App.SearchCore.Response.CrawlerLogsReponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.App.SearchCore.Documents.CrawlerLogsDocument"
          }
        },
        "total": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Cludo.App.SearchCore.Documents.CrawlerLogsDocument": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.CrawlerService.FullCrawlJobRequest": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "string"
        },
        "tagGroup": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cludo.Common.View.DomainCrawlerQueueInfo": {
      "type": "object",
      "properties": {
        "ExecutionBehaviors": {
          "enum": [
            "Smart",
            "Async",
            "NoSmartConditions",
            "ImportSitemaps",
            "CacheSitemaps",
            "SuppressCleanup"
          ],
          "type": "string"
        },
        "Crawler": {
          "$ref": "#/definitions/Cludo.Common.View.CrawlerView"
        },
        "PageLimit": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.App.Models.CrawlerService.SmartCrawlJobRequest": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "string"
        },
        "tagGroup": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cludo.Common.View.PushCrawlerQueueInfo": {
      "type": "object",
      "properties": {
        "CrawlerQueueUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Crawler": {
          "$ref": "#/definitions/Cludo.Common.View.CrawlerView"
        },
        "PageLimit": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.App.Models.CrawlerService.ActiveJobsCountRequest": {
      "type": "object",
      "properties": {
        "minMinutesOfLifetime": {
          "format": "int32",
          "type": "integer"
        },
        "tagGroup": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cludo.Common.View.CrawlerLogViewModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "CrawlJobId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "InstanceId": {
          "type": "string"
        },
        "ExecutionBehaviors": {
          "enum": [
            "Smart",
            "Async",
            "NoSmartConditions",
            "ImportSitemaps",
            "CacheSitemaps",
            "SuppressCleanup"
          ],
          "type": "string"
        },
        "Start": {
          "format": "date-time",
          "type": "string"
        },
        "End": {
          "format": "date-time",
          "type": "string"
        },
        "CrawledPages": {
          "format": "int32",
          "type": "integer"
        },
        "DeletedDocuments": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Cludo.App.Models.SaveHistoricalCrawlerLogRequestModel": {
      "type": "object",
      "properties": {
        "log": {
          "$ref": "#/definitions/Cludo.Common.View.CrawlerLogViewModel"
        },
        "deletionCandidates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cludo.Common.View.GetSitemapView": {
      "required": [
        "CrawlerWebsiteId"
      ],
      "type": "object",
      "properties": {
        "CrawlerWebsiteId": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.SitemapView": {
      "required": [
        "CrawlerWebsiteId",
        "Timestamp",
        "CompressedSitemap"
      ],
      "type": "object",
      "properties": {
        "CrawlerWebsiteId": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "Timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "CompressedSitemap": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.TestCrawlerViewModel": {
      "required": [
        "Crawler",
        "Url"
      ],
      "type": "object",
      "properties": {
        "Crawler": {
          "$ref": "#/definitions/Cludo.Common.View.CrawlerView"
        },
        "Url": {
          "type": "string"
        },
        "Verbose": {
          "type": "boolean"
        }
      }
    },
    "Cludo.Common.View.TestCrawlerResultViewModel": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.TestCrawlerValueResultViewModel"
          }
        },
        "availableLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.TestCrawlLinkViewModel"
          }
        },
        "markup": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.TestCrawlerValueResultViewModel": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cludo.Common.View.TestCrawlLinkViewModel": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.RequestUpgradeModel": {
      "required": [
        "email",
        "product"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "product": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Dto.RequestsByTypeDto": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "amount": {
          "format": "int64",
          "type": "integer"
        },
        "percent": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Cludo.App.Dto.FilterRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "EqualFilter": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "NotEqualFilter": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Device.DeviceTypeFilteringRequestParameters": {
      "type": "object",
      "properties": {
        "DeviceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SearchTerm": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.SortingRequestParameters": {
      "type": "object",
      "properties": {
        "SortOrder": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "OrderBy": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.PagingRequestParameters": {
      "type": "object",
      "properties": {
        "Limit": {
          "format": "int32",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "System.Threading.CancellationToken": {
      "type": "object",
      "properties": {
        "IsCancellationRequested": {
          "type": "boolean",
          "readOnly": true
        },
        "CanBeCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "WaitHandle": {
          "$ref": "#/definitions/System.Threading.WaitHandle",
          "readOnly": true
        }
      }
    },
    "System.Threading.WaitHandle": {
      "type": "object",
      "properties": {
        "SafeWaitHandle": {
          "$ref": "#/definitions/Microsoft.Win32.SafeHandles.SafeWaitHandle"
        }
      }
    },
    "Microsoft.Win32.SafeHandles.SafeWaitHandle": {
      "type": "object",
      "properties": {
        "IsInvalid": {
          "type": "boolean",
          "readOnly": true
        },
        "IsClosed": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Device.DeviceTypeFiltersFilteringRequestParameters": {
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Device.SearchTermAnalyticsFilteringRequestParameters": {
      "type": "object",
      "properties": {
        "DeviceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SearchTerm": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.Dto.EmailSnippetDto": {
      "type": "object",
      "properties": {
        "recipient": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "instructions_url": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.EngineView": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "boostings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.EngineBoostingViewModel"
          }
        },
        "crawlers": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.EngineFilterViewModel"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.EngineFieldView"
          }
        },
        "facets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.EngineFacetView"
          }
        },
        "perPage": {
          "format": "int32",
          "type": "integer"
        },
        "allowPublicSearch": {
          "type": "boolean"
        },
        "trace": {
          "type": "boolean"
        },
        "operator": {
          "enum": [
            "Or",
            "And"
          ],
          "type": "string"
        },
        "highlight": {
          "$ref": "#/definitions/Cludo.Common.View.HighlightView"
        },
        "minScore": {
          "format": "double",
          "type": "number"
        },
        "includeSuggestion": {
          "type": "boolean"
        },
        "queryBuilderName": {
          "type": "string"
        },
        "TemplateName": {
          "type": "string"
        },
        "AutoRankingFactor": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Cludo.Common.View.EngineBoostingViewModel": {
      "required": [
        "fieldName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": [
            "byField",
            "onComparision",
            "dynamic",
            "byPath",
            "decay"
          ],
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "fieldValue": {
          "type": "string"
        },
        "boostValue": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.EngineFilterViewModel": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Filters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Cludo.Common.View.EngineFieldView": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "excludeFromSearch": {
          "type": "boolean"
        },
        "esHighlighterType": {
          "enum": [
            "Default",
            "Plain",
            "Postings",
            "Fvh",
            "Unified"
          ],
          "type": "string"
        },
        "searchContexts": {
          "enum": [
            "Search404",
            "Search",
            "SAYT"
          ],
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.EngineFacetView": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "orderBy": {
          "enum": [
            "DocCount",
            "DocScore",
            "Alphabetically"
          ],
          "type": "string"
        },
        "orderDirection": {
          "enum": [
            "Desc",
            "Asc"
          ],
          "type": "string"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "includeEmpty": {
          "type": "boolean"
        },
        "WebsiteId": {
          "format": "int32",
          "type": "integer"
        },
        "engineFacetId": {
          "format": "int32",
          "type": "integer"
        },
        "operator": {
          "enum": [
            "Or",
            "And"
          ],
          "type": "string"
        },
        "facets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.EngineFacetView"
          }
        }
      }
    },
    "Cludo.Common.View.HighlightView": {
      "type": "object",
      "properties": {
        "preTags": {
          "type": "string"
        },
        "postTags": {
          "type": "string"
        },
        "fragmentSize": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfFragments": {
          "format": "int32",
          "type": "integer"
        },
        "noMatchSize": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.App.Dto.UserFeedbackDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "score": {
          "format": "int32",
          "type": "integer"
        },
        "functional_area": {
          "type": "string"
        },
        "feedback": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.FilterIPViewModel": {
      "required": [
        "cidr",
        "isDeleted",
        "customerid"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "cidr": {
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "customerid": {
          "format": "int32",
          "type": "integer"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "startIp": {
          "type": "string"
        },
        "endIp": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Geo.GetCountryFiltersRequestParameters": {
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        },
        "SearchTerm": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Geo.GetRegionFiltersRequestParameters": {
      "type": "object",
      "properties": {
        "CountryFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        },
        "SearchTerm": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Geo.GetCityFiltersRequestParameters": {
      "type": "object",
      "properties": {
        "RegionFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CountryFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        },
        "SearchTerm": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Geo.CountriesFilteringRequestParameters": {
      "type": "object",
      "properties": {
        "SelectedCountries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SearchTerm": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Geo.GetRegionsRequestParameters": {
      "type": "object",
      "properties": {
        "CountryFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectedRegions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SearchTerm": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Geo.SearchTermAnalyticsFilteringRequestParameters": {
      "type": "object",
      "properties": {
        "CountryFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CityFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RegionFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SearchTerm": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.AnalyticsRequestParameters.Geo.GetCitiesFilteringRequestParameters": {
      "type": "object",
      "properties": {
        "CountryFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RegionFilters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectedCities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SearchTerm": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.SearchCore.Models.Intents.TrendingIntentsParameters": {
      "type": "object",
      "properties": {
        "SortOrder": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "OrderBy": {
          "type": "string"
        },
        "ExcludeLowPriority": {
          "type": "boolean"
        },
        "Limit": {
          "format": "int32",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "Query": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.SearchCore.Models.Intents.IneffectiveIntentsParameters": {
      "type": "object",
      "properties": {
        "SortOrder": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "OrderBy": {
          "type": "string"
        },
        "ExcludeLowPriority": {
          "type": "boolean"
        },
        "Limit": {
          "format": "int32",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "Query": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.SearchCore.Models.Intents.TopIntentsParameters": {
      "type": "object",
      "properties": {
        "SortOrder": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "OrderBy": {
          "type": "string"
        },
        "ExcludeLowPriority": {
          "type": "boolean"
        },
        "Limit": {
          "format": "int32",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "Query": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.SearchCore.Models.Intents.DetailsIntentsParameters": {
      "type": "object",
      "properties": {
        "Intent": {
          "type": "string"
        },
        "SortOrder": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "OrderBy": {
          "type": "string"
        },
        "ExcludeLowPriority": {
          "type": "boolean"
        },
        "Limit": {
          "format": "int32",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "Query": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.SearchCore.Models.Intents.ListIntentsParameters": {
      "type": "object",
      "properties": {
        "Sort": {
          "type": "string"
        },
        "SortOrder": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "OrderBy": {
          "type": "string"
        },
        "ExcludeLowPriority": {
          "type": "boolean"
        },
        "Limit": {
          "format": "int32",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "Query": {
          "type": "string"
        },
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Cludo.App.SearchCore.Models.Intents.HistogramIntentParameters": {
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        },
        "Intent": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.LanguageView": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.LoggingRequest": {
      "required": [
        "level",
        "context",
        "message"
      ],
      "type": "object",
      "properties": {
        "level": {
          "enum": [
            "Debug",
            "Warning",
            "Error",
            "Fatal"
          ],
          "type": "string"
        },
        "context": {
          "enum": [
            "None",
            "SearchApi",
            "Crawler",
            "TaskRunner",
            "MyCludo",
            "CoreTs"
          ],
          "type": "string"
        },
        "message": {
          "maxLength": 10000,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Cludo.App.ViewModels.NewsletterSubscriptionViewModel": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "engine": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.SendNewsletterViewModel": {
      "type": "object",
      "properties": {
        "userId": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.RefreshTokenRequestModel": {
      "type": "object",
      "properties": {
        "LastActiveAccessToken": {
          "type": "string"
        },
        "ClientId": {
          "type": "string"
        },
        "ClientSecret": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.OwnershipCredentialsModel": {
      "type": "object",
      "properties": {
        "ClientId": {
          "type": "string"
        },
        "ClientSecret": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.PageInventoryRequestParameters.CrawlersSummaryRequestParameters": {
      "type": "object",
      "properties": {
        "SearchTerm": {
          "type": "string"
        }
      }
    },
    "Cludo.App.Models.PageInventoryRequestParameters.FilteringRequestParameters": {
      "type": "object",
      "properties": {
        "SearchTerm": {
          "type": "string"
        },
        "Host": {
          "type": "string"
        },
        "EngineId": {
          "format": "int32",
          "type": "integer"
        },
        "DocumentTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CrawlerIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "Cludo.Common.View.PageViewModel": {
      "required": [
        "name",
        "pageurl",
        "pageid"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "pageurl": {
          "type": "string"
        },
        "pageid": {
          "type": "string"
        },
        "searchable": {
          "type": "boolean"
        },
        "websiteid": {
          "format": "int32",
          "type": "integer"
        },
        "website": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Cludo.Common.View.QuicklinkView": {
      "required": [
        "url",
        "websiteid"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "type": "string"
        },
        "terms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.QuicklinkTermView"
          }
        },
        "websiteid": {
          "format": "int32",
          "type": "integer"
        },
        "brokenLinksFoundAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "example": {
        "url": "https://www.cludo.com/contact/",
        "terms": [
          {
            "name": "contact"
          }
        ],
        "websiteid": 7578030
      }
    },
    "Cludo.Common.View.QuicklinkTermView": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.RankingpageViewModel": {
      "required": [
        "showpage",
        "rank"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "showpage": {
          "type": "boolean"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "websiteid": {
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "type": "string",
          "readOnly": true
        },
        "RankingId": {
          "format": "int32",
          "type": "integer"
        },
        "ranking": {
          "type": "string"
        },
        "PageId": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.RankingTermViewModel": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "rankingId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.Common.View.RankingView": {
      "required": [
        "name",
        "WebsiteId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "pages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.EmbededRankingpageViewModel"
          }
        },
        "rankingterms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.RankingTermViewModel"
          }
        },
        "WebsiteId": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "brokenLinksFoundAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "example": {
        "name": "Hello, World!",
        "pages": [
          {
            "id": 0,
            "showpage": true,
            "rank": 1,
            "websiteid": 7578030,
            "page": {
              "name": "Name",
              "pageurl": "https://www.cludo.com/contact/",
              "pageid": "https://www.cludo.com/contact",
              "searchable": true,
              "websiteid": 7578030,
              "website": "http://cludo.com/7578030/",
              "id": 0,
              "url": "http://cludo.com/0/"
            },
            "RankingId": 0
          }
        ],
        "rankingterms": [
          {
            "name": "hello",
            "rankingId": 0,
            "id": 0
          }
        ],
        "WebsiteId": 7578030,
        "id": 0
      }
    },
    "Cludo.Common.View.EmbededRankingpageViewModel": {
      "required": [
        "showpage",
        "rank"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "showpage": {
          "type": "boolean"
        },
        "rank": {
          "format": "int32",
          "type": "integer"
        },
        "websiteid": {
          "format": "int32",
          "type": "integer"
        },
        "page": {
          "$ref": "#/definitions/Cludo.Common.View.PageViewModel"
        },
        "RankingId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Cludo.App.Dto.IndexDocument": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "documentId": {
          "type": "string"
        },
        "pageId": {
          "format": "int32",
          "type": "integer"
        },
        "isAddedAlready": {
          "type": "boolean"
        },
        "hasPageId": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Cludo.App.ViewModels.SignupViewModel": {
      "required": [
        "firstName",
        "lastName",
        "email",
        "phoneNumber",
        "password",
        "companyName",
        "country"
      ],
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "companyUrl": {
          "type": "string"
        },
        "invalidSearchUrl": {
          "type": "boolean"
        },
        "companyName": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        }
      }
    },
    "Cludo.App.ViewModels.DemoRequestViewModel": {
      "required": [
        "name",
        "email",
        "message"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "utmAdGroup": {
          "type": "string"
        },
        "utmCampaign": {
          "type": "string"
        },
        "utmContent": {
          "type": "string"
        },
        "utmMedium": {
          "type": "string"
        },
        "utmSource": {
          "type": "string"
        },
        "utmTerm": {
          "type": "string"
        }
      }
    },
    "Cludo.App.ViewModels.EbookSignupViewModel": {
      "required": [
        "name",
        "email"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "utmAdGroup": {
          "type": "string"
        },
        "utmCampaign": {
          "type": "string"
        },
        "utmContent": {
          "type": "string"
        },
        "utmMedium": {
          "type": "string"
        },
        "utmSource": {
          "type": "string"
        },
        "utmTerm": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.SpellCorrectionView": {
      "required": [
        "name",
        "searchword",
        "language"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "searchword": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Cludo.App.Models.Statistics.TotalSearchesParameters": {
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        },
        "OnlyIncludeUnique": {
          "type": "boolean"
        },
        "IncludePreviousPeriod": {
          "type": "boolean"
        }
      }
    },
    "Cludo.App.Models.Statistics.OverallCtrParameters": {
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        },
        "OnlyIncludeUnique": {
          "type": "boolean"
        },
        "IncludePreviousPeriod": {
          "type": "boolean"
        }
      }
    },
    "Cludo.App.Dto.AutoRankingDiff": {
      "type": "object",
      "properties": {
        "OriginalItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.App.Dto.SearchDocument"
          }
        },
        "AutorankedItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.App.Dto.SearchDocument"
          }
        }
      }
    },
    "Cludo.App.Dto.SearchDocument": {
      "type": "object",
      "properties": {
        "ResultIndex": {
          "format": "int32",
          "type": "integer"
        },
        "Sortings": {
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "Score": {
          "format": "double",
          "type": "number"
        },
        "Fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Cludo.App.Dto.DocumentValue"
          }
        },
        "FieldNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Cludo.App.Dto.DocumentValue": {
      "type": "object",
      "properties": {
        "Field": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "type": "string",
          "readOnly": true
        },
        "Values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Highlights": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsArray": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Cludo.Common.View.SynonymView": {
      "required": [
        "name",
        "searchword",
        "language"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "searchword": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "url": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Cludo.App.Dto.SynonymsDto": {
      "type": "object",
      "properties": {
        "words": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string"
        },
        "groupId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "words": [
          "work",
          "job",
          "opportunity"
        ],
        "language": "en",
        "groupId": 1
      }
    },
    "Cludo.Common.View.TemplateView": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "Sources": {
          "type": "object",
          "properties": {
            "Facet": {
              "type": "string"
            },
            "List": {
              "type": "string"
            },
            "Autocomplete": {
              "type": "string"
            },
            "RelatedSearch": {
              "type": "string"
            }
          }
        }
      }
    },
    "Cludo.App.Models.UserConfigValueRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.UserViewModel": {
      "required": [
        "email",
        "language"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.UserClaimViewModel"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.UserRoleViewModel"
          }
        }
      }
    },
    "Cludo.Common.View.RegisterUserViewModel": {
      "required": [
        "password",
        "confirmPassword",
        "email",
        "language"
      ],
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.UserClaimViewModel"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.UserRoleViewModel"
          }
        }
      }
    },
    "Cludo.Common.View.ChangePasswordViewModel": {
      "required": [
        "existingPassword",
        "newPassword",
        "confirmPassword"
      ],
      "type": "object",
      "properties": {
        "existingPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.SetPasswordViewModel": {
      "required": [
        "email",
        "token",
        "newPassword",
        "confirmPassword"
      ],
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.ResetPasswordViewModel": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "Cludo.App.SearchCore.Validators.ValidationResponse": {
      "type": "object",
      "properties": {
        "ValidationState": {
          "enum": [
            "Invalid",
            "Valid",
            "Unknown"
          ],
          "type": "string"
        },
        "Reason": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.App.SearchCore.Validators.ValidationReason"
          }
        },
        "ProposedValue": {
          "type": "string"
        }
      }
    },
    "Cludo.App.SearchCore.Validators.ValidationReason": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "Cludo.Common.View.WebsiteSettingsViewModel": {
      "type": "object",
      "properties": {
        "enableGoogleAnalyticsIntegration": {
          "type": "boolean"
        },
        "enableSiteimproveAnalyticsIntegration": {
          "type": "boolean"
        },
        "optOutCookieTracking": {
          "type": "boolean"
        },
        "enableAnonymousTracking": {
          "type": "boolean"
        },
        "Engines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quicklinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cludo.Common.View.QuicklinkView"
          }
        },
        "customEngineSettings": {
          "type": "string"
        },
        "subscriptionDigest": {
          "$ref": "#/definitions/Cludo.Common.View.SubscriptionDigestView"
        }
      }
    },
    "Cludo.Common.View.SubscriptionDigestView": {
      "type": "object",
      "properties": {
        "features": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quotas": {
          "type": "object",
          "additionalProperties": {
            "format": "int64",
            "type": "integer"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "Authenticate using your Customer Id (username) and API Key (password)"
    },
    "Authorization": {
      "type": "apiKey",
      "description": "The value needs to be in the form SiteKey {{ base64 encoded customerId:engineId:SearchKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}